{"version":3,"sources":["worker.js","Canvas.js","Animation.js","TempoInputs.js","Metronome.js","Navbar.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Canvas","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","canvasRef","React","createRef","resetCanvas","bind","_assertThisInitialized","window","onorientationchange","onresize","curNote","_createClass","key","value","this","drawCanvas","current","width","innerWidth","scrollTo","canvas","ctx","getContext","fillStyle","theme","background","fillRect","height","circleRadius","Math","min","beatsPerBar","i","_this$props$curNote","_this$curNote","light","shadowBlur","beat","click","isplaying","shadowColor","beginPath","arc","PI","fill","_jsx","className","children","ref","id","Component","Animation","state","lastNoteDrawn","updateAnimation","rAF","requestAnimationFrame","currentTime","audiocontext","notesInQueue","queue","currentNote","length","time","splice","setState","cancelAnimationFrame","TempoInputs","_jsxs","_Fragment","style","textAlign","fontSize","chord","onClick","tempo","type","minTempo","max","maxTempo","step","onChange","majorChords","minorChords","Note","arguments","undefined","PlayButton","playElement","FontAwesomeIcon","icon","faPlay","stopElement","faStop","Settings","checked","majorChordsChecked","handleChordChange","minorChordsChecked","handleTempoChange","clicksPerBeat","Metronome","concat","noteLength","lookahead","scheduleAheadTime","nextBeat","nextBeatTime","nextClick","nextClickTime","isPlaying","audioUnlocked","noteQueue","handleClick","handleTick","AudioContext","webkitAudioContext","audioContext","sampleRate","unlockAudio","timerWorker","worker","onmessage","e","data","postMessage","note","osc","createOscillator","gainNode","createGain","connect","destination","frequency","chords","floor","random","start","gain","setTargetAtTime","stop","_this2","_loop","secondsPerBeat","nextNote","scheduleNote","buffer","createBuffer","node","createBufferSource","nextTempo","target","parseInt","close","nbt","Navbar","faMusic","toggleTheme","faSun","faMoon","App","lightTheme","darkTheme","href","rel","faGithub","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9585f0f2.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"3b3b5c54bb0ab815977d.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","/**\n * Contains the logic to render the visualizer\n * animation and resize the canvas element.\n */\n\nimport React from 'react';\n\nexport default class Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.canvasRef = React.createRef();\n    this.resetCanvas = this.resetCanvas.bind(this);\n\n    window.onorientationchange = this.resetCanvas;\n    window.onresize = this.resetCanvas;\n\n    this.curNote = null;\n  }\n  \n  componentDidMount() {\n    this.resetCanvas();\n  }\n  \n  componentDidUpdate() {\n    this.drawCanvas();\n  }\n\n  resetCanvas() {\n    this.canvasRef.current.width = window.innerWidth;\n    window.scrollTo(0,0); \n    this.drawCanvas();\n  }\n  \n  drawCanvas() {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    ctx.fillStyle = this.props.theme.background;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    let circleRadius = Math.min(canvas.width / this.props.beatsPerBar / 5, 36);\n\n    for (let i = 0; i < this.props.beatsPerBar; i++) {\n      ctx.fillStyle = this.props.theme.light;\n      ctx.shadowBlur = 0;\n\n      if (this.props.curNote?.beat === i && this.props.curNote.click === 0) {\n        this.curNote = this.props.curNote;\n      }\n        \n      if (this.curNote?.beat === i) {\n        /* let percentage = this.props.percentage;\n        1-percentage > .9 ? ctx.globalAlpha = 1-percentage*9 : ctx.globalAlpha = 0;*/\n        if (this.props.isplaying) {\n          ctx.fillStyle = \"red\";\n          ctx.shadowColor = \"red\";\n          ctx.shadowBlur = circleRadius;\n        } else {\n          this.curNote = null;\n        }\n      }\n\n      ctx.beginPath();\n      ctx.arc(i * (canvas.width/this.props.beatsPerBar) + (canvas.width/this.props.beatsPerBar/2), canvas.height/2, circleRadius, 0, Math.PI * 2);\n      ctx.fill();\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"visualizer\">\n        <canvas ref={this.canvasRef} id=\"canvas\" height=\"100\" width=\"100\"/>  \n      </div>\n    );\n  }\n}","/**\n * Uses requestAnimationFrame to update the current\n * \"note\" when it is time, based on the\n * audiocontext.currentTime.\n * \n * Also contains the canvas component.\n */\n\nimport React from 'react';\nimport Canvas from './Canvas.js';\n\nexport default class Animation extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      lastNoteDrawn: null,\n      /* nextNoteTime: 0, */\n      /* percentage: 0, */\n      curNote: null,\n    }\n    \n    this.updateAnimation = this.updateAnimation.bind(this);\n  }\n  \n  componentDidMount() {\n    this.rAF = requestAnimationFrame(this.updateAnimation);\n  }\n  \n  updateAnimation() {\n    if (this.props.isplaying) {\n\n      let currentTime = this.props.audiocontext.currentTime;\n      let notesInQueue = this.props.queue;\n      let currentNote = this.state.lastNoteDrawn;\n\n      while (notesInQueue.length && notesInQueue[0].time < currentTime) {\n          currentNote = notesInQueue[0];\n          notesInQueue.splice(0,1);\n      }\n\n      /* let percentage = ((60/this.props.tempo) - (this.props.nbt - currentTime)) / (60/this.props.tempo);\n      if (percentage < 0) percentage = 0;\n      if (percentage > 1) percentage = 1;\n\n      if (currentNote !== this.state.lastNoteDrawn) {\n\n        this.setState((state, props) => ({\n          percentage: percentage,\n          nextNoteTime: currentNote.time + (60 / props.tempo),\n        }));\n\n      } else {\n        this.setState((state, props) => ({\n          percentage: percentage\n        }));\n      } */\n\n      this.setState(() => ({\n        curNote: currentNote\n      }));\n    }\n\n    this.rAF = requestAnimationFrame(this.updateAnimation);\n  }\n  \n  componentWillUnmount() {\n    cancelAnimationFrame(this.rAF);\n  }\n  \n  render () {\n    return (\n      <Canvas \n        /* percentage={this.state.percentage}  */\n        isplaying={this.props.isplaying} \n        beatsPerBar={this.props.beatsPerBar}\n        curNote={this.state.curNote}\n        theme={this.props.theme}\n      />\n    );\n  }\n}","/**\n * Contains tempo label, increment/decrement tempo\n * buttons, and tempo slider.\n */\n\nimport React from 'react';\n\nexport default class TempoInputs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"tempo-input-row\">\n          <div style={{\n            textAlign: \"center\",\n            width: \"100%\",\n            fontSize: \"5rem\",\n          }}><b>{this.props.chord}</b></div>\n        </div>\n        <div className=\"tempo-input-row\">\n          <button \n            name={\"decrement-tempo\"} \n            onClick={this.props.onClick}  \n            className=\"btn-circle\"\n          >–</button>\n\n          <div className=\"tempo-label\">\n            <span id=\"tempo-label\">{this.props.tempo}</span><span className=\"bpm-label\">&nbsp;bpm</span>\n          </div>\n\n          <button \n            name={\"increment-tempo\"} \n            onClick={this.props.onClick} \n            className=\"btn-circle\"\n          >+</button>\n        </div>\n\n        <div className=\"slider-row\">\n          <input \n            type=\"range\" \n            id=\"tempo\" \n            min={this.props.minTempo} \n            max={this.props.maxTempo} \n            step=\"1\"\n            value={this.props.tempo}\n            onChange={this.props.onChange}\n          />\n        </div>\n      </>\n    );\n  }\n}","/**\n * Contains the core metronome functionality and\n * acts as a wrapper for the metronome interface\n * components.\n * \n * Also contains the Note class and PlayButton and\n * Settings components.\n * \n * Metronome functionality based on the example here:\n * https://github.com/cwilso/metronome\n */\n\nimport React from 'react';\nimport worker from 'workerize-loader!./worker' // eslint-disable-line import/no-webpack-loader-syntax\n\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStop } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Animation from './Animation';\nimport TempoInputs from './TempoInputs';\n\nconst majorChords = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"];\nconst minorChords = [\"Am\", \"Bm\", \"Cm\", \"Dm\", \"Em\", \"Fm\", \"Gm\"];\n\nclass Note {\n  constructor(time = 0, beat = 0, click = 0) {\n    this.time = time;\n    this.beat = beat;\n    this.click = click;\n  }\n}\n\nfunction PlayButton(props) {\n  const playElement = <FontAwesomeIcon icon={faPlay} />;\n  const stopElement = <FontAwesomeIcon icon={faStop} />;\n  return (\n    <div className=\"play-row\">\n      <button className=\"btn-circle large\" onClick={props.onClick} name=\"play-button\">\n        {props.value === \"Start\" ? playElement : stopElement}\n      </button>\n    </div>\n  );\n}\n\nfunction Settings(props) {\n  return (\n    <div className=\"settings-row\">\n      <label className=\"cb-label\"><input type=\"checkbox\" name=\"major-chords-toggle\" checked={props.majorChordsChecked} onChange={props.handleChordChange} />&nbsp;Major Chords</label>\n      <label className=\"cb-label\"><input type=\"checkbox\" name=\"minor-chords-toggle\" checked={props.minorChordsChecked} onChange={props.handleChordChange} />&nbsp;Minor Chords</label>\n      <div className=\"select-wrapper\">\n        <select \n          value={props.beatsPerBar} \n          onChange={props.handleTempoChange}\n          name=\"beat-select\"\n        >\n          <option value=\"2\">2/4</option>\n          <option value=\"3\">3/4</option>\n          <option value=\"4\">4/4</option>\n          <option value=\"5\">5/4</option>\n          <option value=\"6\">6/4</option>\n          <option value=\"7\">7/4</option>\n          <option value=\"8\">8/4</option>\n        </select>\n      </div>\n\n      <div className=\"select-wrapper\">\n        <select \n          value={props.clicksPerBeat} \n          onChange={props.handleTempoChange}\n          name=\"click-select\"\n        >\n          <option value=\"1\">1 click</option>\n          <option value=\"2\">2 clicks</option>\n          <option value=\"3\">3 clicks</option>\n          <option value=\"4\">4 clicks</option>\n          <option value=\"5\">5 clicks</option>\n          <option value=\"6\">6 clicks</option>\n          <option value=\"7\">7 clicks</option>\n        </select>\n      </div>\n    </div>\n  );\n}\n\n/***\n * \n * MAIN METRONOME COMPONENT\n * \n ***/\n\nexport default class Metronome extends React.Component {\n  constructor(props) {\n    super(props);\n    let chords = majorChords.concat(minorChords);\n    this.state = {\n      noteLength: .05,\n      lookahead: 25,\n      scheduleAheadTime: .1,\n\n      tempo: 120,\n      maxTempo: 240,\n      minTempo: 30,\n\n      nextBeat: 0,\n      nextBeatTime: 0,\n\n      nextClick: 0,\n      nextClickTime: 0,\n\n      isPlaying: false,\n      audioUnlocked: false,\n      noteQueue: [],      \n\n      beatsPerBar: 4,\n      clicksPerBeat: 1,\n\n      majorChordsChecked: true,\n      minorChordsChecked: true\n    };\n    \n    this.handleTempoChange = this.handleTempoChange.bind(this);\n    this.handleChordChange = this.handleChordChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTick = this.handleTick.bind(this);\n\n    var AudioContext = window.AudioContext\n      || window.webkitAudioContext\n      || false; \n    this.audioContext = new AudioContext({ sampleRate: 44100 });\n    \n    this.unlockAudio();\n\n    this.timerWorker = worker();\n    this.timerWorker.onmessage = (e) => {\n      if (e.data === \"tick\") {\n        this.handleTick();\n      }\n      /* else\n        console.log(\"Worker: \" + e.data); */\n    };\n    this.timerWorker.postMessage({ \"interval\":this.state.lookahead });\n  }\n\n  scheduleNote(note) {\n    var osc = this.audioContext.createOscillator();\n    var gainNode = this.audioContext.createGain();\n    osc.connect(gainNode);\n    gainNode.connect(this.audioContext.destination);\n\n    if (note.beat !== 0) {\n      osc.frequency.value = 440.0;\n    } else {\n      osc.frequency.value = 880.0;\n    }\n    if (note.click !== 0) {\n      osc.frequency.value = 330.0;\n    }\n\n    if (note.beat === 0 && note.click === 0) {\n      let chords = [];\n      if (this.state.majorChordsChecked) chords = chords.concat(majorChords);\n      if (this.state.minorChordsChecked) chords = chords.concat(minorChords);\n      this.setState({ chord: chords[Math.floor(Math.random() * chords.length)] });\n    }\n    osc.start(this.state.nextClickTime);\n    gainNode.gain.setTargetAtTime(0, this.state.nextClickTime + this.state.noteLength, 0.015);\n    osc.stop(this.state.nextClickTime + this.state.noteLength*2);\n  }\n\n  handleTick() {\n    if (!this.state.isPlaying) return;\n\n    while (this.state.nextClickTime < this.audioContext.currentTime + this.state.scheduleAheadTime) {  \n      let nextBeat = this.state.nextBeat;\n      let nextClick = this.state.nextClick;\n      let secondsPerBeat = 60.0 / this.state.tempo;\n      let nextBeatTime = this.state.nextBeatTime;\n    \n      let nextNote = new Note(this.state.nextClickTime, nextBeat, nextClick);  \n      if (nextNote.click === 0) {\n        nextBeatTime = nextNote.time + secondsPerBeat;\n      }\n      this.scheduleNote(nextNote);\n\n      if (this.state.clicksPerBeat > 1) {\n        nextClick++;\n        if (nextClick >= this.state.clicksPerBeat) {\n          nextClick = 0;\n          nextBeat++;\n          if (nextBeat >= this.state.beatsPerBar) {\n            nextBeat = 0;\n          }\n        }\n      } else {\n        nextBeat++;\n        nextClick = 0;\n        if (nextBeat >= this.state.beatsPerBar) {\n          nextBeat = 0;\n        }\n      }\n\n      this.setState((state) => {\n        const queue = state.noteQueue.concat(nextNote);\n        return {\n          noteQueue: queue,\n          nextClickTime: state.nextClickTime + 1/this.state.clicksPerBeat * secondsPerBeat,\n          nextBeatTime: nextBeatTime,\n          nextBeat: nextBeat,\n          nextClick: nextClick\n        };\n      });\n    }\n  }\n\n  unlockAudio() {\n    var buffer = this.audioContext.createBuffer(1, 1, 22050);\n    var node = this.audioContext.createBufferSource();\n    node.buffer = buffer;\n    node.start(this.audioContext.currentTime);\n  }\n  \n  handleClick(e) {\n    let nextTempo = 0;\n    switch (e.target.name) {\n      case \"increment-tempo\":\n        nextTempo = parseInt(this.state.tempo)+1;\n        this.setState(state => ({ tempo: nextTempo > state.maxTempo ? state.tempo : nextTempo }));\n        return;\n      case \"decrement-tempo\":\n        nextTempo = parseInt(this.state.tempo)-1;\n        this.setState(state => ({ tempo: nextTempo < state.minTempo ? state.tempo : nextTempo }));\n        return;\n      default:\n        break;\n    }\n\n    this.timerWorker.postMessage(this.state.isPlaying ? \"stop\" : \"start\");\n\n    if (this.state.isPlaying) {\n      this.audioContext.close();\n\n      this.setState(state => ({\n        isPlaying: !state.isPlaying,\n        audioUnlocked: false,\n        noteQueue: [],\n        nextClickTime: 0,\n        nextBeat: 0,\n        nextClick: 0\n      }));\n    }\n    else {\n      let AudioContext = window.AudioContext\n        || window.webkitAudioContext\n        || false; \n      this.audioContext = new AudioContext({ sampleRate: 44100 });\n                      \n      if (!this.state.audioUnlocked) {\n        this.unlockAudio();\n      }\n\n      this.setState(state => ({\n        isPlaying: !state.isPlaying,\n        audioUnlocked: true\n      }));\n    }\n  }\n  \n  handleTempoChange(e) {\n    if (e.target.name === \"beat-select\") {\n      this.setState({ beatsPerBar: e.target.value });\n      return;\n    }\n    if (e.target.name === \"click-select\") {\n      this.setState({ clicksPerBeat: e.target.value });\n      return;\n    }\n    this.setState({ tempo: e.target.value });\n  }\n\n  handleChordChange(e) {\n    if (e.target.name === \"major-chords-toggle\") {\n      this.setState({ majorChordsChecked: e.target.checked });\n    }\n    else if (e.target.name === \"minor-chords-toggle\") {\n      this.setState({ minorChordsChecked: e.target.checked });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <TempoInputs \n          chord={this.state.chord}\n          onChange={this.handleTempoChange} \n          onClick={this.handleClick} \n          tempo={this.state.tempo} \n          maxTempo={this.state.maxTempo} \n          minTempo={this.state.minTempo} \n        />\n        <Animation \n          tempo={this.state.tempo} \n          nbt={this.state.nextBeatTime} \n          isplaying={this.state.isPlaying} \n          queue={this.state.noteQueue}\n          audiocontext={this.audioContext}\n          beatsPerBar={this.state.beatsPerBar} \n          theme={this.props.theme}\n        />\n        <PlayButton \n          value={this.state.isPlaying ? \"Stop\" : \"Start\"} \n          onClick={this.handleClick} \n        />\n        <Settings \n          beatsPerBar={this.state.beatsPerBar} \n          clicksPerBeat={this.state.clicksPerBeat} \n          handleTempoChange={this.handleTempoChange}\n          handleChordChange={this.handleChordChange}\n          minorChordsChecked={this.state.minorChordsChecked}\n          majorChordsChecked={this.state.majorChordsChecked}\n        />\n      </>\n    );\n  }\n}","/**\n * Contains upper header including logo and\n * dark mode/light mode toggle button.\n */\n\nimport React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic, faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <header className=\"navbar\">\n        <div className=\"logo\">\n          <FontAwesomeIcon icon={faMusic} />&nbsp;&nbsp;Metronome\n        </div>\n        <div>\n          <button onClick={this.props.toggleTheme}>\n            {\n              this.props.theme === \"dark\" ? \n              <><FontAwesomeIcon icon={faSun} />&nbsp;&nbsp;Too dark?</>\n              :\n              <><FontAwesomeIcon icon={faMoon} />&nbsp;&nbsp;Too bright?</>\n            }\n          </button>\n        </div>\n      </header>\n    );\n  }\n}","/**\n * Includes initial ReactDOM.render(), in addition\n * to theming functionality.\n * \n * Acts as a wrapper to the rest of the components.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'normalize.css';\nimport './styles/main.css';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport Metronome from './Metronome';\nimport Navbar from './Navbar';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lightTheme: {\n        background: \"#f0f0f0\",\n        light: \"#ccc\",\n      },\n      darkTheme: {\n        background: \"#424242\",\n        light: \"#595959\"\n      },\n      theme: \"dark\"\n    };\n\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n\n  toggleTheme() {\n    this.setState((state) => ({ theme: state.theme === \"dark\" ? \"light\" : \"dark\"}));\n  }\n\n  render() {\n    return(\n      <div className={this.state.theme === \"dark\" ? \"theme-dark\" : \"theme-light\"}>\n        <div className=\"app-wrapper\">\n          <div className=\"app\">\n            <Navbar \n              onClick={null} \n              toggleTheme={this.toggleTheme} \n              theme={this.state.theme} \n            />\n            <Metronome \n              theme={this.state.theme === \"dark\" ? this.state.darkTheme : this.state.lightTheme} \n            />\n          </div>  \n          <footer>\n            <a href=\"https://github.com/aviolin/metronome/\" target=\"_blank\" rel=\"noreferrer\">\n              <FontAwesomeIcon icon={faGithub} />&nbsp;&nbsp;View the source on Github\n            </a>\n            <p>&copy; 2021, Arlo Adams</p>\n          </footer>\n        </div>\n      </div>\n    ); \n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}